# Generated by Django 4.1.7 on 2023-04-24 20:03

import account_app.validations
from django.conf import settings
import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion
import taggit.managers
import tinymce.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('taggit', '0005_auto_20220424_2025'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.IntegerField(editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('email_validated', models.BooleanField(default=False)),
                ('first_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(blank=True, max_length=255)),
                ('account_type', models.CharField(choices=[('Recruiter', 'Recruiter'), ('Intern', 'Intern')], default='Intern', max_length=10)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_verified', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Intern',
            fields=[
                ('user_profile', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='interns', related_query_name='interns', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('phone_number', models.CharField(default='123456789123', max_length=15)),
                ('img_profile', models.ImageField(blank=True, upload_to='profile_img/')),
                ('location_name', models.CharField(blank=True, max_length=100, validators=[account_app.validations.validate_location])),
                ('lat', models.FloatField(blank=True, default=0, null=True)),
                ('lng', models.FloatField(blank=True, default=0, null=True)),
                ('location_coordinates', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
                ('cv', models.FileField(blank=True, upload_to='cv/', validators=[account_app.validations.validate_employee_cv])),
                ('skills', taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
        ),
        migrations.CreateModel(
            name='WorkExperience',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('company_name', models.CharField(max_length=255)),
                ('job_title', models.CharField(max_length=255)),
                ('position', models.CharField(max_length=255)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('description', tinymce.models.HTMLField(blank=True)),
                ('intern', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='work_experiences', related_query_name='work_experiences', to='account_app.intern')),
            ],
        ),
        migrations.CreateModel(
            name='Recruiter',
            fields=[
                ('user_profile', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='recruiters', related_query_name='recruiters', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('company_name', models.CharField(default='Company Name', max_length=255)),
                ('website', models.URLField(blank=True)),
                ('location_name', models.CharField(blank=True, max_length=255, validators=[account_app.validations.validate_location])),
                ('lat', models.FloatField(blank=True, default=0, null=True)),
                ('lng', models.FloatField(blank=True, default=0, null=True)),
                ('location_coordinates', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
                ('logo', models.ImageField(blank=True, upload_to='logo/')),
                ('description', tinymce.models.HTMLField(blank=True)),
                ('category', taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
        ),
        migrations.CreateModel(
            name='OrganizationExperience',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('organization_name', models.CharField(max_length=255)),
                ('position', models.CharField(choices=[('President', 'President'), ('Vice President', 'Vice President'), ('Secretary', 'Secretary'), ('Treasurer', 'Treasurer'), ('Head of Division', 'Head Of Division'), ('Staff', 'Staff'), ('Member', 'Member')], default='Member', max_length=255)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('description', tinymce.models.HTMLField(blank=True)),
                ('intern', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='organization_experiences', related_query_name='organization_experiences', to='account_app.intern')),
            ],
        ),
        migrations.CreateModel(
            name='Education',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('institution', models.CharField(max_length=255)),
                ('field_of_study', models.CharField(max_length=255)),
                ('degree', models.CharField(choices=[('High_school', 'High School'), ('Diploma', 'Diploma'), ('Bachelor', 'Bachelor'), ('Master', 'Master'), ('PhD', 'Phd')], default='Bachelor', max_length=255)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('description', tinymce.models.HTMLField(blank=True)),
                ('intern', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='educations', related_query_name='educations', to='account_app.intern')),
            ],
        ),
        migrations.CreateModel(
            name='Award',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('intern', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='awards', related_query_name='awards', to='account_app.intern')),
            ],
        ),
    ]
